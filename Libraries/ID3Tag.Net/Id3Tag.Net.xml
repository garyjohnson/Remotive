<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Id3Tag.Net</name>
    </assembly>
    <members>
        <member name="T:Id3Tag.HighLevel.TextEncodingType">
            <summary>
            Defines the Text Encoding.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.TextEncodingType.Ansi">
            <summary>
            ISO-8859-1 encoding.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.TextEncodingType.Unicode">
            <summary>
            Unicode UTF-16 encoding (little endian is default).
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.TextEncodingType.BigEndianUnicode">
            <summary>
            Unicode UTF-16 big endian encoding.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.TextEncodingType.Utf8">
            <summary>
            Unicode UTF-8 encoding.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame">
            <summary>
            This frame is intended for URL links concerning the audiofile in a similar way to 
            the other "W"-frames. The frame body consists of a description of the string, 
            represented as a terminated string, followed by the actual URL. The URL is always 
            encoded with ISO-8859-1. There may be more than one "WXXX" frame in each tag, but 
            only one with the same description.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Frame">
            <summary>
            This class implements the IFrame interface and provides infrastructure code for the
            concrete Frame implementations.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.IFrame">
            <summary>
            Represents an high level frame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.IFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert a high level frame into a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Imports a raw frame values into a high level frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="P:Id3Tag.HighLevel.IFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.IFrame.Descriptor">
            <summary>
            The descriptor.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Frame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.Frame"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Frame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values from the high level frame to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Frame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw content to a high level frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Frame.ImportRawFrameHeader(Id3Tag.LowLevel.RawFrame)">
            <summary>
            Import the header flags from a raw frame.
            </summary>
            <param name="rawFrame">The raw frame.</param>
        </member>
        <member name="P:Id3Tag.HighLevel.Frame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Frame.Descriptor">
            <summary>
            The description of the frame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.#ctor">
            <summary>
            Creates a new instance of UrlLinkFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of UrlLinkFrame.
            </summary>
            <param name="id">the frame ID.</param>
            <param name="url">the url.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the URLLinkFrame.
            </summary>
            <param name="version">The version.</param>
            <returns>the RawFrame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame data.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Not used</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.ToString">
            <summary>
            Overwrite ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.Url">
            <summary>
            The URL.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UrlLinkFrame.Type">
            <summary>
            The frame Type.
            </summary>
        </member>
        <member name="T:Id3Tag.LowLevel.Id3TagInfo">
            <summary>
            Represents a low level Id3Tag.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.MajorVersion">
            <summary>
            The major version.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.Revision">
            <summary>
            The revision.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.Unsynchronised">
            <summary>
            The unsynchronisation flag.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.ExtendedHeaderAvailable">
            <summary>
            True if the extended header is available, otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.Experimental">
            <summary>
            The experminental flag.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.HasFooter">
            <summary>
            Gets or sets a value indicating whether this instance has footer (ID3v2.4 only).
            </summary>
            <value>
            	<c>true</c> if this instance has footer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.ExtendedHeader">
            <summary>
            The Extended Header of the tag
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.Id3TagInfo.Frames">
            <summary>
            The frames of the tag in raw format.
            </summary>
        </member>
        <member name="T:Id3Tag.LowLevel.FrameOptions">
            <summary>
            Identifies applicable Frame Flags (Options)
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.TagAlterPreservation">
            <summary>
            The TagAlterPreservation option.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.FileAlterPreservation">
            <summary>
            The FileAlterPreservation option.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.ReadOnly">
            <summary>
            The ReadOnly option.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.Compression">
            <summary>
            The Compression option.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.Encryption">
            <summary>
            The Encryption option.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.GroupingIdentify">
            <summary>
            The GroupingIdentify option.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.Unsynchronisation">
            <summary>
            The Unsynchronisation option ( ID3V.2.4 only! )
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.FrameOptions.DataLengthIndicator">
            <summary>
            The DataLengthIndicator option ( ID3v2.4. only! )
            </summary>
        </member>
        <member name="T:Id3Tag.Id3IOException">
            <summary>
            This exception is thrown if an internal I/O error occured.
            </summary>
        </member>
        <member name="T:Id3Tag.Id3TagException">
            <summary>
            Base exception for all Id3Tag specific exceptions.
            </summary>
        </member>
        <member name="M:Id3Tag.Id3TagException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3TagException"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.Id3TagException.#ctor(System.String)">
            <summary>
            Creates a new instance of Id3TagException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:Id3Tag.Id3TagException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of Id3TagException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the inner exception.</param>
        </member>
        <member name="M:Id3Tag.Id3TagException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3TagException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Id3Tag.Id3IOException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3IOException"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.Id3IOException.#ctor(System.String)">
            <summary>
            Creates a new instance of Id3IOException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:Id3Tag.Id3IOException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of Id3IOException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the previous exception.</param>
        </member>
        <member name="M:Id3Tag.Id3IOException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3TagException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Id3Tag.Id3TagManager">
            <summary>
            Provides simple interface to ID3 Tag V1 and V2 functionality
            </summary>
        </member>
        <member name="T:Id3Tag.IId3TagManager">
            <summary>
            Defines ID3 Tag Manager Functionality
            </summary>
        </member>
        <member name="M:Id3Tag.IId3TagManager.ReadV1Tag(System.String)">
            <summary>
            Reads ID3 v1 tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <returns>ID3 v1 Tag</returns>
        </member>
        <member name="M:Id3Tag.IId3TagManager.ReadV1Tag(System.String,System.Int32)">
            <summary>
            Reads ID3 v1 tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <param name="codePage">Code page of the tag text.</param>
            <returns>ID3 v1 Tag</returns>
        </member>
        <member name="M:Id3Tag.IId3TagManager.WriteV1Tag(System.String,Id3Tag.HighLevel.Id3V1Tag)">
            <summary>
            Updates ID3 v1 tag in the same file.
            </summary>
            <param name="path">The path.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Id3Tag.IId3TagManager.WriteV1Tag(System.String,Id3Tag.HighLevel.Id3V1Tag,System.Int32)">
            <summary>
            Updates ID3 v1 tag in the same file.
            </summary>
            <param name="path">The path.</param>
            <param name="tag">The tag.</param>
            <param name="codePage">The code page.</param>
        </member>
        <member name="M:Id3Tag.IId3TagManager.WriteV1Tag(System.String,System.String,Id3Tag.HighLevel.Id3V1Tag)">
            <summary>
            Saves ID3 v1 tag to new file.
            </summary>
            <param name="sourcePath">The path.</param>
            <param name="targetPath">The target sourcePath.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Id3Tag.IId3TagManager.WriteV1Tag(System.String,System.String,Id3Tag.HighLevel.Id3V1Tag,System.Int32)">
            <summary>
            Saves ID3 v1 tag to new file.
            </summary>
            <param name="sourcePath">The path.</param>
            <param name="targetPath">The target sourcePath.</param>
            <param name="tag">The tag.</param>
            <param name="codePage">The code page for tag text.</param>
        </member>
        <member name="M:Id3Tag.IId3TagManager.ReadV2Tag(System.String)">
            <summary>
            Reads ID3 v2 tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <returns>ID3 v2 Tag</returns>
        </member>
        <member name="M:Id3Tag.IId3TagManager.ReadV2Tag(System.String,System.Int32)">
            <summary>
            Reads ID3 v2 Tag tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <param name="codePage">The default code page for non-unicode encoded text.</param>
            <returns>ID3 v2 Tag</returns>
        </member>
        <member name="M:Id3Tag.IId3TagManager.WriteV2Tag(System.String,Id3Tag.HighLevel.TagContainer)">
            <summary>
            Updates specified ID3 v2 tag in the same file.
            </summary>
            <param name="path">The file path.</param>
            <param name="tag">The tag to save.</param>
        </member>
        <member name="M:Id3Tag.IId3TagManager.WriteV2Tag(System.String,System.String,Id3Tag.HighLevel.TagContainer)">
            <summary>
            Writes specified ID3 v2 tag to new file.
            </summary>
            <param name="sourcePath">The source file path.</param>
            <param name="targetPath">The target file path.</param>
            <param name="tag">The tag data.</param>
        </member>
        <member name="M:Id3Tag.IId3TagManager.GetTagsStatus(System.String)">
            <summary>
            Checks if specified file has ID3 tags.
            </summary>
            <param name="path">The path to file.</param>
            <returns>Status of the tags in the file</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.ReadV1Tag(System.String)">
            <summary>
            Reads ID3 v1 tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <returns>ID3 v1 Tag</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.ReadV1Tag(System.String,System.Int32)">
            <summary>
            Reads ID3 v1 tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <param name="codePage">Code page of the tag text.</param>
            <returns>ID3 v1 Tag</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteV1Tag(System.String,Id3Tag.HighLevel.Id3V1Tag)">
            <summary>
            Updates ID3 v1 tag in the same file.
            </summary>
            <param name="path">The path.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteV1Tag(System.String,Id3Tag.HighLevel.Id3V1Tag,System.Int32)">
            <summary>
            Updates ID3 v1 tag in the same file.
            </summary>
            <param name="path">The path.</param>
            <param name="tag">The tag.</param>
            <param name="codePage">The code page.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteV1Tag(System.String,System.String,Id3Tag.HighLevel.Id3V1Tag)">
            <summary>
            Saves ID3 v1 tag to new file.
            </summary>
            <param name="sourcePath">The path.</param>
            <param name="targetPath">The target sourcePath.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteV1Tag(System.String,System.String,Id3Tag.HighLevel.Id3V1Tag,System.Int32)">
            <summary>
            Saves ID3 v1 tag to new file.
            </summary>
            <param name="sourcePath">The path.</param>
            <param name="targetPath">The target sourcePath.</param>
            <param name="tag">The tag.</param>
            <param name="codePage">The code page for tag text.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.ReadV2Tag(System.String)">
            <summary>
            Reads ID3 v2 tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <returns>ID3 v2 Tag</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.ReadV2Tag(System.IO.Stream)">
            <summary>
            Reads ID3 v2 tag from the the specified file path.
            </summary>
            <param name="fileStream">The file stream</param>
            <returns>ID3 v2 Tag</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.ReadV2Tag(System.String,System.Int32)">
            <summary>
            Reads ID3 v2 Tag tag from the the specified file path.
            </summary>
            <param name="path">The path.</param>
            <param name="codePage">The default code page for non-unicode encoded text.</param>
            <returns>ID3 v2 Tag</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.ReadV2Tag(System.IO.Stream,System.Int32)">
            <summary>
            Reads ID3 v2 Tag tag from the the specified file path.
            </summary>
            <param name="fileStream">The file stream</param>
            <param name="codePage">The default code page for non-unicode encoded text.</param>
            <returns>ID3 v2 Tag</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteV2Tag(System.String,Id3Tag.HighLevel.TagContainer)">
            <summary>
            Updates specified ID3 v2 tag in the same file.
            </summary>
            <param name="path">The file path.</param>
            <param name="tag">The tag to save.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteV2Tag(System.String,System.String,Id3Tag.HighLevel.TagContainer)">
            <summary>
            Writes specified ID3 v2 tag to new file.
            </summary>
            <param name="sourcePath">The source file path.</param>
            <param name="targetPath">The target file path.</param>
            <param name="tag">The tag data.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.GetTagsStatus(System.String)">
            <summary>
            Checks if specified file has ID3 tags.
            </summary>
            <param name="path">The path to file.</param>
            <returns>Status of the tags in the file</returns>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteTag(System.String,Id3Tag.Id3TagManager.CopyDataDelegate)">
            <summary>
            Writes the tag data generically.
            </summary>
            <param name="path">The path.</param>
            <param name="copyDataDelegate">The delegate.</param>
        </member>
        <member name="M:Id3Tag.Id3TagManager.WriteTag(System.String,System.String,Id3Tag.Id3TagManager.CopyDataDelegate)">
            <summary>
            Writes the data from source file to target file generically.
            </summary>
            <param name="sourcePath">The source path.</param>
            <param name="targetPath">The target path.</param>
            <param name="copyDataDelegate">The delegate.</param>
        </member>
        <member name="T:Id3Tag.HighLevel.ITagController">
            <summary>
            Represents a highlevel tag controller.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.ITagController.Decode(Id3Tag.LowLevel.Id3TagInfo)">
            <summary>
            Decodes a low level tag into a high level.
            </summary>
            <param name="info">the low level tag.</param>
            <returns>the high level tag representation.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.ITagController.Decode(Id3Tag.LowLevel.Id3TagInfo,System.Int32)">
            <summary>
            Decodes a low level tag into a high level.
            </summary>
            <param name="info">the low level tag.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding.</param>
            <returns>the high level tag representation.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.ITagController.Encode(Id3Tag.HighLevel.TagContainer)">
            <summary>
            Encodes a high level tag to a low level.
            </summary>
            <param name="container">the high level tag.</param>
            <returns>a low level tag.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagController.Decode(Id3Tag.LowLevel.Id3TagInfo)">
            <summary>
            Decodes a low level tag into a high level.
            </summary>
            <param name="info">the low level tag.</param>
            <returns>the high level tag representation.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagController.Decode(Id3Tag.LowLevel.Id3TagInfo,System.Int32)">
            <summary>
            Decodes a low level tag into a high level.
            </summary>
            <param name="info">the low level tag.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding.</param>
            <returns>the high level tag representation.</returns>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.UnknownFrame">
            <summary>
            Represents a frame that cannot be identified by the reader.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnknownFrame.#ctor">
            <summary>
            Creates a new Unknown frame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnknownFrame.SetContent(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the content from binary data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnknownFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the Unknownframe.
            </summary>
            <returns>a RawFrame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnknownFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the the raw frame data.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnknownFrame.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UnknownFrame.Content">
            <summary>
            The payload.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UnknownFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.CommentFrame">
            <summary>
            This frame is indended for any kind of full text information that does not fit in any other frame. 
            It consists of a frame header followed by encoding, language and content descriptors and is 
            ended with the actual comment as a text string. Newline characters are allowed in the 
            comment text string. There may be more than one comment frame in each tag, but 
            only one with the same language and content descriptor.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.EncodedTextFrame">
            <summary>
            Base class for all frames that contain encoded text
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.EncodedTextFrame.TextEncoding">
            <summary>
            The text encoding
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.CommentFrame.#ctor">
            <summary>
            Creates a new instance of CommentFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.CommentFrame.#ctor(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new instance of CommentFrame.
            </summary>
            <param name="language">the language.</param>
            <param name="descriptor">the descriptor.</param>
            <param name="text">the text.</param>
            <param name="encoding">the text encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.CommentFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.CommentFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.CommentFrame.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.CommentFrame.Language">
            <summary>
            The language.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.CommentFrame.ContentDescriptor">
            <summary>
            The content descriptor.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.CommentFrame.Text">
            <summary>
            The text.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.CommentFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.IId3V1Controller">
            <summary>
            Converts the ID3v1 tags to ID3v2 tags.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.IId3V1Controller.Read(System.IO.Stream,System.Int32)">
            <summary>
            Reads the ID3v1 tag using specified code page for text encoding.
            </summary>
            <param name="inputStream">the input stream (i.e. the file.)</param>
            <param name="codePage">The code page for text encoding.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IId3V1Controller.Read(System.IO.FileInfo)">
            <summary>
            Reads the ID3v1 tag using default code page for text encoding.
            </summary>
            <param name="file">the file.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IId3V1Controller.Read(System.IO.Stream)">
            <summary>
            Reads the ID3v1 tag using default code page for text encoding.
            </summary>
            <param name="inputStream">the input stream (i.e. the file.)</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IId3V1Controller.Read(System.IO.FileInfo,System.Int32)">
            <summary>
            Reads the ID3v1 tag using specified code page for text encoding.
            </summary>
            <param name="file">the file.</param>
            <param name="codePage">The code page.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IId3V1Controller.Write(Id3Tag.HighLevel.Id3V1Tag,System.IO.Stream,System.IO.Stream)">
            <summary>
            Writes a new ID3v1 tag using default code page for text encoding.
            </summary>
            <param name="tag">the tag.</param>
            <param name="input">the audio input stream.</param>
            <param name="output">the target stream.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.IId3V1Controller.Write(Id3Tag.HighLevel.Id3V1Tag,System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Writes a new ID3v1 tag using specified code page for text encoding.
            </summary>
            <param name="tag">the tag.</param>
            <param name="input">the audio input stream.</param>
            <param name="output">the target stream.</param>
            <param name="codePage">The code page for text encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Controller.Read(System.IO.Stream,System.Int32)">
            <summary>
            Reads the ID3v1 tag using specified code page for text encoding.
            </summary>
            <param name="inputStream">the input stream (i.e. the file.)</param>
            <param name="codePage">The code page for text encoding.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Controller.Read(System.IO.FileInfo)">
            <summary>
            Reads the ID3v1 tag using default code page for text encoding.
            </summary>
            <param name="file">the file.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Controller.Read(System.IO.Stream)">
            <summary>
            Reads the ID3v1 tag using default code page for text encoding.
            </summary>
            <param name="inputStream">the input stream (i.e. the file.)</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Controller.Read(System.IO.FileInfo,System.Int32)">
            <summary>
            Reads the ID3v1 tag using specified code page for text encoding.
            </summary>
            <param name="file">the file.</param>
            <param name="codePage">The code page.</param>
            <returns>An ID3v1 container.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Controller.Write(Id3Tag.HighLevel.Id3V1Tag,System.IO.Stream,System.IO.Stream)">
            <summary>
            Writes a new ID3v1 tag using default code page for text encoding.
            </summary>
            <param name="tag">the tag.</param>
            <param name="input">the audio input stream.</param>
            <param name="output">the target stream.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Controller.Write(Id3Tag.HighLevel.Id3V1Tag,System.IO.Stream,System.IO.Stream,System.Int32)">
            <summary>
            Writes a new ID3v1 tag using specified code page for text encoding.
            </summary>
            <param name="tag">the tag.</param>
            <param name="input">the audio input stream.</param>
            <param name="output">the target stream.</param>
            <param name="codePage">The code page for text encoding.</param>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame">
            <summary>
            The purpose of this frame is to specify how good an audio file is. 
            Many interesting applications could be found to this frame such as a playlist that features 
            better audiofiles more often than others or it could be used to profile a person's taste and 
            find other 'good' files by comparing people's profiles. The frame is very simple. 
            It contains the email address to the user, one rating byte and a four byte play counter, intended to 
            be increased with one for every time the file is played. The email is a terminated string. 
            The rating is 1-255 where 1 is worst and 255 is best. 0 is unknown. 
            If no personal counter is wanted it may be omitted. When the counter reaches all one's, one byte 
            is inserted in front of the counter thus making the counter eight bits 
            bigger in the same away as the play counter ("PCNT"). 
            There may be more than one "POPM" frame in each tag, but only one with the same email address.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.#ctor">
            <summary>
            Creates a new PopularityMeterFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.#ctor(System.String,System.Byte,System.UInt64)">
            <summary>
            Creates a new Popularimeter frame.
            </summary>
            <param name="mail">The mail adress</param>
            <param name="rating">The rating</param>
            <param name="counter">The playcounter</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the Popularimeterframe.
            </summary>
            <returns>a RawFrame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw content to a high level frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.ToString">
            <summary>
            Returns a string with details.
            </summary>
            <returns>the string.</returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.Rating">
            <summary>
            The payload.
            The Rating.
            Byte-Value with
            0 = Unrated
            1 = Worst Rating
            ...
            255 = Best Rating
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.Email">
            <summary>
            Identifies the source of the rating.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.PlayCounter">
            <summary>
            Specifies how often the file has been played by the source  of the rating.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PopularimeterFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Genre">
            <summary>
            Contains a dictionary of Genre IDs.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Genre.#ctor">
            <summary>
            Creates a new instance of Genre
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Genre.GetGenre(System.Int32)">
            <summary>
            Gets the description of the genre id.
            </summary>
            <param name="genreId">the id.</param>
            <returns>the description.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Genre.ContainsGenre(System.Int32)">
            <summary>
            True if an description can be found, otherweise false.
            </summary>
            <param name="genreId">the gerne ID.</param>
            <returns>the description.</returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Genre.Instance">
            <summary>
            Gets an instance of Genre.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Genre.AllGenres">
            <summary>
            Gets the genres. The index of the list represents the id.
            </summary>
            <returns>A new readonly collection</returns>
        </member>
        <member name="T:Id3Tag.LowLevel.ExtendedTagHeaderV4">
            <summary>
            Represents the extended tag header of the ID3V2.4 tag.
            </summary>
        </member>
        <member name="T:Id3Tag.LowLevel.ExtendedHeader">
            <summary>
            Defines the basic subset of an Extended Header.
            </summary>
        </member>
        <member name="M:Id3Tag.LowLevel.ExtendedHeader.ConvertToV23">
            <summary>
            Convert the header to ID3V2.3
            </summary>
            <returns>an ID3v2.3 header</returns>
        </member>
        <member name="M:Id3Tag.LowLevel.ExtendedHeader.ConvertToV24">
            <summary>
            Convert the extended header to ID3v2.4
            </summary>
            <returns>an ID3V2.4 extended header</returns>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedHeader.HeaderType">
            <summary>
            Gets the header version
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedHeader.CrcDataPresent">
            <summary>
            True if the Crc32 flag is set otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedHeader.Crc32">
            <summary>
            The CRC32 bytes
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedTagHeaderV4.UpdateTag">
            <summary>
            True if the Update Tag flag is set otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedTagHeaderV4.RestrictionPresent">
            <summary>
            True if the Restriction flag is set otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedTagHeaderV4.Restriction">
            <summary>
            The Restriction byte
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedTagHeaderV4.HeaderType">
            <summary>
            Defines the extend header type.
            </summary>
        </member>
        <member name="T:Id3Tag.Id3HeaderNotFoundException">
            <summary>
            This exception is thrown if no valid ID3 header is found.
            </summary>
        </member>
        <member name="M:Id3Tag.Id3HeaderNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3HeaderNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.Id3HeaderNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3HeaderNotFoundException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="ex">The inner exception.</param>
        </member>
        <member name="M:Id3Tag.Id3HeaderNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3HeaderNotFoundException"/> class.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:Id3Tag.Id3HeaderNotFoundException.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3HeaderNotFoundException"/> class.
            </summary>
            <param name="ex">The inner exception.</param>
        </member>
        <member name="M:Id3Tag.Id3HeaderNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.Id3HeaderNotFoundException"/> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Id3Tag.HighLevel.TagDescriptor">
            <summary>
            Represents the tag header.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptor.#ctor(System.Int32,System.Int32)">
            <summary>
            Creates a new instance of TagDescriptor.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptor.SetCrc32(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the calculated CRC32 values.
            </summary>
            <param name="crc">the crc Values in bytes (MSB!)</param>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptor.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.MajorVersion">
            <summary>
            The major version.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.Revision">
            <summary>
            The  revision.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.Unsynchronisation">
            <summary>
            The unsynchronisation flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.ExtendedHeader">
            <summary>
            The extended header flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.ExperimentalIndicator">
            <summary>
            The experimental indicator flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.CrcDataPresent">
            <summary>
            The CRC data present flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptor.Crc">
            <summary>
            The CRC data.
            </summary>
        </member>
        <member name="T:Id3Tag.LowLevel.ExtendedTagHeaderV3">
            <summary>
            Represents the extended tag header of the ID3V2.3 tag.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedTagHeaderV3.PaddingSize">
            <summary>
            The padding size.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.ExtendedTagHeaderV3.HeaderType">
            <summary>
            Defines the extended header type
            </summary>
        </member>
        <member name="T:Id3Tag.InvalidId3StructureException">
            <summary>
            This exception is thrown if the ID3 structure is invalid.
            </summary>
        </member>
        <member name="M:Id3Tag.InvalidId3StructureException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.InvalidId3StructureException"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.InvalidId3StructureException.#ctor(System.String)">
            <summary>
            Creates a new instance of Id3TagException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:Id3Tag.InvalidId3StructureException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of Id3TagException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the inner exception.</param>
        </member>
        <member name="M:Id3Tag.InvalidId3StructureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.InvalidId3StructureException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame">
            <summary>
            This frame is intended for one-string text information concerning the 
            audiofile in a similar way to the other "T"-frames. The frame body consists 
            of a description of the string, represented as a terminated string, 
            followed by the actual string. There may be more than one "TXXX" frame in each tag, 
            but only one with the same description.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.#ctor">
            <summary>
            Creates a new UserDefindedTextFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new UserDefindedTextFrame.
            </summary>
            <param name="description">the description.</param>
            <param name="value">the value.</param>
            <param name="encoding">the text encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>a raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.Value">
            <summary>
            The value.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UserDefinedTextFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame">
            <summary>
            This frame is intended for music that comes from a CD, so that the CD can be identified 
            in databases such as the CDDB. The frame consists of a binary dump of the Table Of Contents, 
            TOC, from the CD, which is a header of 4 bytes and then 8 bytes/track on the CD plus 8 bytes 
            for the 'lead out' making a maximum of 804 bytes. The offset to the beginning of every 
            track on the CD should be described with a four bytes absolute CD-frame address per 
            track, and not with absolute time. This frame requires a present and valid "TRCK" frame, 
            even if the CD's only got one track. There may only be one "MCDI" frame in each tag.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.#ctor">
            <summary>
            Creates a new instance of MusicCDIdentifierFrame
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.#ctor(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Creates a new instance of MusicCDIdentifierFrame
            </summary>
            <param name="toc">the toc.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.SetToc(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the TOC value from bytes data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.Toc">
            <summary>
            The TOC of CD.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.MusicCDIdentifierFrame.Type">
            <summary>
            The Frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.LowLevel.RawFrame">
            <summary>
            Represents a raw ID3 tag frame.
            </summary>
        </member>
        <member name="M:Id3Tag.LowLevel.RawFrame.#ctor(System.String,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.LowLevel.RawFrame"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="P:Id3Tag.LowLevel.RawFrame.Payload">
            <summary>
            The payload of the frame.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.RawFrame.Id">
            <summary>
            The frame ID.
            </summary>
        </member>
        <member name="P:Id3Tag.LowLevel.RawFrame.Options">
            <summary>
            Gets or sets the options.
            </summary>
            <value>The options.</value>
        </member>
        <member name="T:Id3Tag.InvalidTagFormatException">
            <summary>
            This exception is thrown if the tag format is invalid.
            </summary>
        </member>
        <member name="M:Id3Tag.InvalidTagFormatException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.InvalidTagFormatException"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.InvalidTagFormatException.#ctor(System.String)">
            <summary>
            Creates a new instance of InvalidTagFormatException.
            </summary>
            <param name="message">the message.</param>
        </member>
        <member name="M:Id3Tag.InvalidTagFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new instance of InvalidTagFormatException.
            </summary>
            <param name="message">the message.</param>
            <param name="innerEx">the previous exception.</param>
        </member>
        <member name="M:Id3Tag.InvalidTagFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.InvalidTagFormatException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is null.
            </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">
            The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0).
            </exception>
        </member>
        <member name="T:Id3Tag.FileState">
            <summary>
            Represents the Id3Tag state of a file.
            </summary>
        </member>
        <member name="M:Id3Tag.FileState.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.FileState"/> class.
            </summary>
            <param name="id3V1TagFound">if set to <c>true</c>, then ID3 v1 tag is found.</param>
            <param name="id3V2TagFound">if set to <c>true</c>, then ID3 v2 tag is found.</param>
        </member>
        <member name="M:Id3Tag.FileState.ToString">
            <summary>
            Overwrites the ToString()
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.FileState.Id3V1TagFound">
            <summary>
            True if a ID3V1 tag is found otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.FileState.Id3V2TagFound">
            <summary>
            True if a ID3V2 tag is found otherwise false.
            </summary>
        </member>
        <member name="M:Id3Tag.Utils.CalculateSize(System.Byte[])">
            <summary>
            Calculates the size that is used in various parts of the Frame Header.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.Utils.Convert8BitEncodedToInt32(System.Byte[])">
            <summary>
            Converts 8-bit encoded data to 32-bit integer value.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.Utils.Convert7BitEncodedToInt32(System.Byte[])">
            <summary>
            Converts 7-bit encoded data to 32-bit integer value.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.Utils.BytesToString(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Converts byte array to a string of printable characters.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns></returns>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.TextFrame">
            <summary>
            The text information frames are the most important frames, containing information like artist, 
            album and more. There may only be one text information frame of its kind in an tag. 
            If the textstring is followed by a termination ($00 (00)) all the following information 
            should be ignored and not be displayed. All text frame identifiers begin with "T". 
            Only text frame identifiers begin with "T", with the exception of the "TXXX" frame. 
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.TextFrame.#ctor">
            <summary>
            Creates a new TextFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.TextFrame.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new TextFrame.
            </summary>
            <param name="id">the frame id.</param>
            <param name="content">the content.</param>
            <param name="encoding">the text encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.TextFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.TextFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.TextFrame.ToString">
            <summary>
            Overwrites ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.TextFrame.Content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.TextFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.IFrameCreationService">
            <summary>
            Encapsulates the ID3 Frames
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.IFrameCreationService.Search(System.String)">
            <summary>
            Determines whether the frame ID is available.
            </summary>
            <param name="id">the frame ID</param>
            <returns>true if found otherwise false</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IFrameCreationService.GetTextFrame">
            <summary>
            Get the text frame instance
            </summary>
            <returns>the IFrame instance</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IFrameCreationService.GetUrlLinkFrame">
            <summary>
            Get the URL link frame instance
            </summary>
            <returns>the IFrame instance</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.IFrameCreationService.GetFrameInstance(System.String)">
            <summary>
            Get the text frame instance
            </summary>
            <param name="id">the </param>
            <returns>the IFrame instance</returns>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame">
             <summary>
             This frame contains the lyrics of the song or a text transcription of
            other vocal activities. The head includes an encoding descriptor and
            a content descriptor. The body consists of the actual text. The
            'Content descriptor' is a terminated string. If no descriptor is
            entered, 'Content descriptor' is $00 (00) only. Newline characters
            are allowed in the text. There may be more than one 'Unsynchronised
             lyrics/text transcription' frame in each tag, but only one with the
            same language and content descriptor.
             </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame"/> class.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.#ctor(System.String,System.String,System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="descriptor">The descriptor.</param>
            <param name="lyrics">The lyrics.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert this frame to <see cref="T:Id3Tag.LowLevel.RawFrame"/>.
            </summary>
            <param name="version"></param>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Imports values from the <see cref="T:Id3Tag.LowLevel.RawFrame"/>.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.Language">
            <summary>
            The languange
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.ContentDescriptor">
            <summary>
            The content descriptor
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.Lyrics">
            <summary>
            The lyrics
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame.Type">
            <summary>
            Gets the frame type.
            </summary>
            <value></value>
        </member>
        <member name="T:Id3Tag.LowLevel.RawFrameV4">
            <summary>
            Contains Version 2.4 specifics of <see cref="T:Id3Tag.LowLevel.RawFrame"/>
            </summary>
        </member>
        <member name="M:Id3Tag.LowLevel.RawFrameV4.#ctor(System.String,System.Byte[],System.Collections.Generic.IList{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.LowLevel.RawFrameV4"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="options">The options.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Id3Tag.LowLevel.RawFrameV4.#ctor(System.String,Id3Tag.LowLevel.FrameOptions,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.LowLevel.RawFrameV4"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="options">The options.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="T:Id3Tag.LowLevel.IIOController">
            <summary>
            Represents a low level tag controller.
            </summary>
        </member>
        <member name="M:Id3Tag.LowLevel.IIOController.Read(System.IO.FileInfo)">
            <summary>
            Read the tag from file.
            </summary>
            <param name="file">the file.</param>
            <returns>a low level tag.</returns>
        </member>
        <member name="M:Id3Tag.LowLevel.IIOController.Read(System.IO.Stream)">
            <summary>
            Read the tag from an input stream.
            </summary>
            <param name="inputStream">the input stream.</param>
            <returns>a low level tag.</returns>
        </member>
        <member name="M:Id3Tag.LowLevel.IIOController.Write(Id3Tag.HighLevel.TagContainer,System.IO.Stream,System.IO.Stream)">
            <summary>
            Writes a high level tag container to a output stream.
            </summary>
            <param name="tagContainer">the tag.</param>
            <param name="input">the input stream (i.e. audio file)</param>
            <param name="output">the output stream (temp. file)</param>
        </member>
        <member name="M:Id3Tag.LowLevel.IIOController.DetermineTagStatus(System.IO.Stream)">
            <summary>
            Determine the Id3Tag status.
            </summary>
            <param name="audioStream">the audio stream.</param>
            <returns>the Id3Tag state</returns>
        </member>
        <member name="M:Id3Tag.LowLevel.IIOController.DetermineTagStatus(System.IO.FileInfo)">
            <summary>
            Determine the Id3Tag status.
            </summary>
            <param name="file">the file.</param>
            <returns>the Id3Tag state</returns>
        </member>
        <member name="T:Id3Tag.HighLevel.TagVersion">
            <summary>
            Represents the ID3V2 major version.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.TagVersion.Id3V23">
            <summary>
            ID3v2.3
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.TagVersion.Id3V24">
            <summary>
            ID3v2.4
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.PictureType">
            <summary>
            Defines the Picture type.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Other">
            <summary>
            Other.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.FileIcon32X32">
            <summary>
            File Icon 32x32
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.FileIconOther">
            <summary>
            File Icon Other
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.CoverFront">
            <summary>
            Cover front
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.CoverBack">
            <summary>
            Cover back
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.LeafletPage">
            <summary>
            Leaflet Page
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Media">
            <summary>
            Media
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.LeadArtist">
            <summary>
            Lead Artist
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Artist">
            <summary>
            Artist
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Conductor">
            <summary>
            Conductor
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Band">
            <summary>
            Band
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Composer">
            <summary>
            Composer
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.TextWriter">
            <summary>
            Text Writer
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.RecordingLocation">
            <summary>
            Recording Location
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.DuringRecording">
            <summary>
            During Recording
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.DuringPerformance">
            <summary>
            During Performance
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.MovieScreenCapture">
            <summary>
            Movie Screen Capture
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.ABrightColouredFish">
            <summary>
            A bright coloured fish
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.Illustration">
            <summary>
            Illustration
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.BandLogotype">
            <summary>
            Band logotype
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.PictureType.PublisherLogotype">
            <summary>
            Publisher logotype
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame">
            <summary>
            This frame is intended for URL links concerning the audiofile in a similar way to the 
            other "W"-frames. The frame body consists of a description of the string, represented 
            as a terminated string, followed by the actual URL. The URL is always encoded with ISO-8859-1. 
            There may be more than one "WXXX" frame in each tag, but only one with the same description.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.#ctor">
            <summary>
            Creates a new UserDefinedUrlLinkFrame
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.#ctor(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new UserDefinedUrlLinkFrame
            </summary>
            <param name="description">the Description</param>
            <param name="url">The URL</param>
            <param name="encoding">The text encoding type.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.Description">
            <summary>
            The description
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.Url">
            <summary>
            The URL.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UserDefinedUrlLinkFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.LowLevel.RawFrameV3">
            <summary>
            Contains version 2.3 specifics of <see cref="T:Id3Tag.LowLevel.RawFrame"/>
            </summary>
        </member>
        <member name="M:Id3Tag.LowLevel.RawFrameV3.#ctor(System.String,System.Byte[],System.Collections.Generic.IList{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.LowLevel.RawFrameV3"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="options">The options.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Id3Tag.LowLevel.RawFrameV3.#ctor(System.String,Id3Tag.LowLevel.FrameOptions,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.LowLevel.RawFrameV3"/> class.
            </summary>
            <param name="id">The id.</param>
            <param name="options">The options.</param>
            <param name="payload">The payload.</param>
        </member>
        <member name="T:Id3Tag.HighLevel.FrameDescriptor">
            <summary>
            Represents the ID3 Frame header.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDescriptor.#ctor">
            <summary>
            Creates a new instance of FrameDescriptor
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDescriptor.ToString">
            <summary>
            Overwrites ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.Id">
            <summary>
            The frame ID.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.Unsynchronisation">
            <summary>
            The Unsynchronisation flag ( ID3v2.4 only)
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.DataLengthIndicator">
            <summary>
            The DataLengthIndicator ( ID3v2.4 only)
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.TagAlterPreservation">
            <summary>
            The TagAlterPreservation flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.FileAlterPreservation">
            <summary>
            The FileAlterPreservation flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.ReadOnly">
            <summary>
            The ReadOnly flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.Compression">
            <summary>
            The Compression flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.Encryption">
            <summary>
            The Encryption flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.GroupingIdentify">
            <summary>
            The GroupingIdentify flag.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDescriptor.Options">
            <summary>
            Gets the Flags
            </summary>
            <returns>The flags</returns>
        </member>
        <member name="T:Id3Tag.HighLevel.TagContainer">
            <summary>
            Represents a high level ID3 tag.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.#ctor(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Creates a new TagContainer.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.Add(Id3Tag.HighLevel.IFrame)">
            <summary>
            Add a new frame.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.Clear">
            <summary>
            Clear the collection.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.Contains(Id3Tag.HighLevel.IFrame)">
            <summary>
            Search for a specific frame.
            </summary>
            <param name="item">the frame.</param>
            <returns>True if the items exists otherwise false.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.CopyTo(Id3Tag.HighLevel.IFrame[],System.Int32)">
            <summary>
            Add a number of frames to the list.
            </summary>
            <param name="array">the frames.</param>
            <param name="arrayIndex">the array index.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.Remove(Id3Tag.HighLevel.IFrame)">
            <summary>
            Remove an item.
            </summary>
            <param name="item">the item.</param>
            <returns>true if the item can be removed otherwise false.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.GetEnumerator">
            <summary>
            Gets the enumerator of the frames.
            </summary>
            <returns>the enumerator.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator of the frames.
            </summary>
            <returns>the enumerator.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.SearchFrame(System.String)">
            <summary>
            Search for a specific frame.
            </summary>
            <param name="id">the ID of the frame.</param>
            <returns>the frame instance if available otherwise null.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.GetId3V23Descriptor">
            <summary>
            Gets the version 2.3 descriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.GetId3V24Descriptor">
            <summary>
            Gets the version 2.4 descriptor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainer.ToString">
            <summary>
            Overwrites the ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.TagContainer.TagVersion">
            <summary>
            The ID3v2 version
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagContainer.Item(System.Int32)">
            <summary>
            Get a specific IFrame from the container.
            </summary>
            <param name="index">the index.</param>
            <returns>the IFrame instance.</returns>
        </member>
        <member name="P:Id3Tag.HighLevel.TagContainer.Count">
            <summary>
            The number of frames.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagContainer.IsReadOnly">
            <summary>
            Determine whether this collection is read only.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.TagDescriptorV4">
            <summary>
            Represents an ID3v2.4 tag 
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptorV4.#ctor">
            <summary>
            Creates a new TagDescriptorV4 instance
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptorV4.SetHeaderOptions(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the header options (flags).
            </summary>
            <param name="unsynchronisation">the unsynchronisation flag.</param>
            <param name="extendedHeader">the extended header flag.</param>
            <param name="experimentalIndicator">the experimental indicator flag.</param>
            <param name="footer">the footer flag</param>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptorV4.SetExtendedHeader(System.Boolean,System.Boolean,System.Boolean,System.Byte)">
            <summary>
            Sets the extended header values.
            </summary>
            <param name="crcDataPresent">the CRC data present flag</param>
            <param name="updateTag">the update tag</param>
            <param name="restriction">the restriction byte</param>
            <param name="restrictionPresent">enable the restriction</param>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptorV4.Footer">
            <summary>
            Write a ID3v2.4 footer
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptorV4.UpdateTag">
            <summary>
            True if the Update Tag flag is set otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptorV4.RestrictionPresent">
            <summary>
            True if the Restriction flag is set otherwise false.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptorV4.Restriction">
            <summary>
            The Restriction byte
            </summary>
        </member>
        <member name="T:Id3Tag.Version">
            <summary>
            Returns the current version of this library.
            </summary>
        </member>
        <member name="P:Id3Tag.Version.ReadableVersion">
            <summary>
            Gets the current assemly version.
            </summary>
            <returns>a readable string.</returns>
        </member>
        <member name="T:Id3Tag.Crc32">
            <summary>
            Creates and Verifies CRC32 values.
            </summary>
        </member>
        <member name="F:Id3Tag.Crc32.DefaultPolynom">
            <summary>
             The CRC32 generator polynom.
            </summary>
        </member>
        <member name="M:Id3Tag.Crc32.#ctor(System.UInt32)">
            <summary>
            Creates a new instance of Crc32.
            </summary>
            <param name="generatorPolynom">the generator polynom.</param>
        </member>
        <member name="M:Id3Tag.Crc32.Calculate(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Calculates the CRC32 value with given generator polynom in the constructor!
            </summary>
            <param name="data">the bytes.</param>
            <returns>the CRC32 value in MSB!</returns>
        </member>
        <member name="T:Id3Tag.Id3TagFactory">
            <summary>
            Factory for the ID3 tag controller.
            </summary>
        </member>
        <member name="M:Id3Tag.Id3TagFactory.CreateIOController">
            <summary>
            Creates a new I/O controller.
            </summary>
            <returns>a new I/O controller.</returns>
        </member>
        <member name="M:Id3Tag.Id3TagFactory.CreateTagController">
            <summary>
            Creates a new tag controller.
            </summary>
            <returns>a new ITagController.</returns>
        </member>
        <member name="M:Id3Tag.Id3TagFactory.CreateId3V1Controller">
            <summary>
            Creates a new ID3v1 converter.
            </summary>
            <returns>a new converter.</returns>
        </member>
        <member name="M:Id3Tag.Id3TagFactory.CreateId3Tag(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Creates a new ID3 Tag representation. 
            </summary>
            <param name="version">the ID3 Tag version.</param>
            <returns>the representation instance.</returns>
        </member>
        <member name="M:Id3Tag.Id3TagFactory.CreateId3TagManager">
            <summary>
            Creates new instance of <see cref="T:Id3Tag.Id3TagManager"/>.
            </summary>
            <returns>New instance of new instance of <see cref="T:Id3Tag.Id3TagManager"/>.</returns>
        </member>
        <member name="T:Id3Tag.HighLevel.TagDescriptorV3">
            <summary>
            Represents an TagDescriptor for ID3v2.3 spec.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptorV3.#ctor">
            <summary>
            Creates a new instance of a TagDescriptorV3
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptorV3.SetExtendedHeader(System.Int32,System.Boolean)">
            <summary>
            Sets the extended header values.
            </summary>
            <param name="paddingSize">the padding size.</param>
            <param name="crcDataPresent">the CRC data present flag</param>
        </member>
        <member name="M:Id3Tag.HighLevel.TagDescriptorV3.SetHeaderOptions(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Set the header flags.
            </summary>
            <param name="unsynchronisation">the unsynchronisation flag.</param>
            <param name="extendedHeader">the extended header flag.</param>
            <param name="experimentalIndicator">the experimental indicator flag.</param>
        </member>
        <member name="P:Id3Tag.HighLevel.TagDescriptorV3.PaddingSize">
            <summary>
            The padding size.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.TagContainerV4">
            <summary>
            Contains ver 2.4 specifics of <see cref="T:Id3Tag.HighLevel.TagContainer"/>
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainerV4.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.TagContainerV4"/> class.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagContainerV4.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="T:Id3Tag.HighLevel.TagContainerV3">
            <summary>
            Contains ver 2.3 specifics for <see cref="T:Id3Tag.HighLevel.TagContainer"/>
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.TagContainerV3.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.TagContainerV3"/> class.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.TagContainerV3.Tag">
            <summary>
            Gets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="T:Id3Tag.HighLevel.FrameType">
            <summary>
            Defines the ID3 Frame types.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.Unknown">
            <summary>
            Unknown frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.Text">
            <summary>
            Text frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.UserDefinedText">
            <summary>
            Userdefined frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.Private">
            <summary>
            Private frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.MusicCDIdentifier">
            <summary>
            Music CD Identifier frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.Comment">
            <summary>
            Comment frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.UrlLink">
            <summary>
            URL link frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.UserDefinedUrlLink">
            <summary>
            Userdefinded URL link frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.AudioEncryption">
            <summary>
            AudioEncryption Frame.
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.Picture">
            <summary>
            Picture Frame
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.Popularimeter">
            <summary>
            Popularimeter Frame
            </summary>        
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.PlayCounter">
            <summary>
            Play Counter Frame
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.UniqueFileIdentifier">
            <summary>
            Unique File Identifier
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.InvolvedPeopleList">
            <summary>
            Involved People list
            </summary>
        </member>
        <member name="F:Id3Tag.HighLevel.FrameType.UnsynchronisedLyric">
            <summary>
            Unsnychronised Lyric
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame">
            <summary>
            This is simply a counter of the number of times a file has been played. The value is 
            increased by one every time the file begins to play. There may only be one "PCNT" frame in each tag. 
            When the counter reaches all one's, one byte is inserted in front of the 
            counter thus making the counter eight bits bigger. 
            The counter must be at least 32-bits long to begin with.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.#ctor">
            <summary>
            Creates a new instance of PlayCounterFrame
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.#ctor(System.UInt64)">
            <summary>
            Creates a new instance of PlayCounterFrame
            </summary>
            <param name="playCounter">the play counter</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Converts a play counter frame to raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Converts a raw frame to PlayCounter frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
            s
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.ToString">
            <summary>
            Overwrites ToString
            </summary>
            <returns>the ToString representation</returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.Counter">
            <summary>
            The play counter of the audio file.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PlayCounterFrame.Type">
            <summary>
            Defines the frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.FrameDataWriter">
            <summary>
            Writes data for the Raw Frame Payload
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.FrameDataWriter"/> class using specified capacity.
            </summary>
            <param name="capacity">The initial buffer capacity.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.FrameDataWriter"/> class using default capacity.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Id3Tag.HighLevel.FrameDataWriter"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WritePreamble(System.Text.Encoding)">
            <summary>
            Writes the encoded text preamble (byte order mark [BOM]) to the stream.
            Preamble is required for unicode strings only. BE Unicode and UTF8 should not have it.
            Preamble should be written only once per frame at the beginning of the encoded text.
            </summary>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteString(System.String,System.Text.Encoding,System.Int32)">
            <summary>
            Writes fixed string to the stream.
            </summary>
            <param name="text">The string.</param>
            <param name="encoding">The encoding.</param>
            <param name="count">The count of bytes to write.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteString(System.String,System.Text.Encoding)">
            <summary>
            Writes variable string to the stream without termination bytes.
            </summary>
            <param name="text">The text.</param>
            <param name="encoding">The encoding.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteString(System.String,System.Text.Encoding,System.Boolean)">
            <summary>
            Writes variable string to the stream and adds termination bytes if specified.
            </summary>
            <param name="text">The text.</param>
            <param name="encoding">The encoding.</param>
            <param name="addTerminationBytes">if set to <c>true</c> [add termination bytes].</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteUInt16(System.UInt16)">
            <summary>
            Writes the unsigned short integer to the stream using less significant byte (LSB) first order.
            Uses 2 bytes for storage.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteUInt32(System.UInt32)">
            <summary>
            Writes the unsigned integer to the stream using using less significant byte (LSB) first order.
            Uses 4 bytes for storage.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteUInt64(System.UInt64)">
            <summary>
            Writes the unsigned big integer to the stream using using variable less significant byte (LSB) first order.
            Uses at least 4 and at max 8 bytes for storage.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes the value to the stream.
            </summary>
            <param name="value">The data to write.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteBytes(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Writes the value to the stream.
            </summary>
            <param name="value">The data to write.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.ToArray">
            <summary>
            Returns the stream contents as byte array, regardless of the current position.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteEncodingByte(System.Text.Encoding)">
            <summary>
            Writes the text encoding type byte.
            </summary>
            <param name="encoding">The encoding that defines the encoding byte.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataWriter.WriteByte(System.Byte)">
            <summary>
            Writes a byte to the stream.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="T:Id3Tag.HighLevel.FrameDataReader">
            <summary>
            Reads data from the Raw Frame Payload.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.#ctor(System.Collections.Generic.ICollection{System.Byte})">
            <summary>
            Initializes a new instance of the <see cref="T:Id3Tag.HighLevel.FrameDataReader"/> class.
            </summary>
            <param name="payload">The payload.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.CreateUnicodeFromBom">
            <summary>
            Reads UTF-16 encoding from the stream.
            </summary>
            <returns>Encoding</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.GetBytesBuffer">
            <summary>
            Laizy init buffer of bytes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.GetCharsBuffer">
            <summary>
            Laizy init buffer of chars
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.Finalize">
            <summary>
            Releases unmanaged resources and performs other cleanup operations before the
            <see cref="T:Id3Tag.HighLevel.FrameDataReader"/> is reclaimed by garbage collection.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadEncoding(System.Int32,System.Int32)">
            <summary>
            Discovers and reads encoding type from the stream using current stream index as starting position of the encoded text.
            The encoding byte is always located at position 0. However, additional information from the text is needed to determine
            byte order mark (BOM) for unicode encodings (UTF). After this method is executed, the position will be set to the first
            byte of the actual text.
            </summary>
            <param name="encodingTypeValue">The encoding byte.</param>
            <param name="codePage">The default code page for ASCI encodings.</param>
            <returns></returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadFixedString(System.Text.Encoding,System.Int32)">
            <summary>
            Reads fixed string from the stream starting with current position.
            </summary>
            <param name="encoding">The encoding.</param>
            <param name="length">Number of bytes to read.</param>
            <returns>Decoded string</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadVariableString(System.Text.Encoding)">
            <summary>
            Reads the variable-length string that is terminated either by zero-char or end of stream.
            After reading, the position will be set after zero-char terminator.
            </summary>
            <param name="encoding">The encoding.</param>
            <returns>String</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadByte">
            <summary>
            Reads byte from the stream starting with current position.
            </summary>
            <returns>Byte</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadBytes(System.Int32)">
            <summary>
            Reads specified number of bytes from the stream starting with current position.
            </summary>
            <param name="count">The count.</param>
            <returns>Data</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadBytes">
            <summary>
            Reads all bytes from the stream starting with current position.
            </summary>
            <returns>Data</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadUInt16">
            <summary>
            Reads Unsigned Integer (2 bytes) from the stream starting with current position.
            Assumes that integer bytes are recorded in the reverse order.
            </summary>
            <returns>Value</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadUInt32">
            <summary>
            Reads unsigned integer (4 bytes) from the stream starting with current position.
            </summary>
            <returns>Value</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameDataReader.ReadUInt64">
            <summary>
            Reads unsigned big integer (min 4 - max 8 bytes) from the stream starting with current position.
             </summary>
            <returns>Value</returns>
            <remarks>
            NOTE: This method assumes that there will be no more data to read from the stram after this.
            </remarks>
        </member>
        <member name="P:Id3Tag.HighLevel.FrameDataReader.Position">
            <summary>
            Gets or sets the position in the stream.
            </summary>
            <value>The position.</value>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.PictureFrame">
            <summary>
            This frame contains a picture directly related to the audio file. Image format is the MIME type and 
            subtype for the image. In the event that the MIME media type name is omitted, "image/" will be implied.
            The "image/png" or "image/jpeg" picture format should be used when interoperability is wanted. 
            Description is a short description of the picture, represented as a terminated textstring. 
            The description has a maximum length of 64 characters, but may be empty. There may be several 
            pictures attached to one file, each in their individual "APIC" frame, but only one with the 
            same content descriptor. There may only be one picture with the picture type declared as 
            picture type $01 and $02 respectively. There is the possibility to put only a link to the image 
            file by using the 'MIME type' "-->" and having a complete URL instead of picture data. 
            The use of linked files should however be used sparingly since there is the risk of separation of files.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PictureFrame.#ctor">
            <summary>
            Creates a new instance of PictureFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PictureFrame.#ctor(System.Text.Encoding,System.String,System.String,Id3Tag.HighLevel.PictureType,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Creates a new instance of PictureFrame.
            </summary>
            <param name="encoding">the text encoding</param>
            <param name="mimeType">the MIME type</param>
            <param name="description">the description</param>
            <param name="picture">the picture type</param>
            <param name="data">the picture bytes</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PictureFrame.SetPictureData(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the picture from binary data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PictureFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Converts the picture frame to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PictureFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import a raw frame
            </summary>
            <param name="rawFrame">the raw frame</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PictureFrame.ToString">
            <summary>
            Overwrites ToString.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PictureFrame.MimeType">
            <summary>
            The MIME Type.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PictureFrame.Description">
            <summary>
            The Description of the frame.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PictureFrame.PictureCoding">
            <summary>
            The Picture coding.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PictureFrame.PictureData">
            <summary>
            The Picture bytes.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PictureFrame.Type">
            <summary>
            Defines the frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3V1Tag">
            <summary>
            Represents the ID3V1 Tag block.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3V1Tag.#ctor">
            <summary>
            Creates a new ID3V1 Tag with default settings.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.Title">
            <summary>
            The Title.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.Artist">
            <summary>
            The Artist.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.Album">
            <summary>
            The Album.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.Year">
            <summary>
            The Year.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.Comment">
            <summary>
            The Comment.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.Genre">
            <summary>
            The Genre.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.GenreIdentifier">
            <summary>
             The ID3v1 Genre Identifier  ( 0 = Blues )
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.TrackNumber">
            <summary>
            The Track Nr.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3V1Tag.IsId3V1Dot1Compliant">
            <summary>
            True if ID3V1.1 is supported otherwise false
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.FrameUtilities">
            <summary>
            Provides some static helper methods.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.Convert(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UnknownFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToText(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an TextFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToUserDefinedText(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UserDefinedTextFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToPrivateFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an PrivateFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToMusicCDIdentifierFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an MusicCDIdentifierFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToCommentFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an CommentFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToUrlLinkFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UrlLinkFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToUserDefinedUrlLinkFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an UserDefinedUrlLinkFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToAudioEncryptionFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to an AudioEncryptionFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrecte type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToPictureFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Casts an abstract frame to a PictureFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrete type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToPlayCounterFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to a PlayCounterFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrete type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToPopularimeterFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to a PopularimeterFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrete type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToUniqueIdentifierFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Convert a abstract frame to a UniqueFileIdentifierFrame.
            </summary>
            <param name="frame">the abstract frame.</param>
            <returns>the concrete type.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.FrameUtilities.ConvertToUnsynchronisedLyricsFrame(Id3Tag.HighLevel.IFrame)">
            <summary>
            Casts a frame to <see cref="T:Id3Tag.HighLevel.Id3Frame.UnsynchronisedLyricFrame"/>.
            </summary>
            <param name="frame">The frame.</param>
            <returns></returns>
        </member>
        <member name="T:Id3Tag.LowLevel.ExtendedHeaderType">
            <summary>
            Defines the Extended Header Type
            </summary>
        </member>
        <member name="F:Id3Tag.LowLevel.ExtendedHeaderType.V23">
            <summary>
            An ID3v2.3 header
            </summary>
        </member>
        <member name="F:Id3Tag.LowLevel.ExtendedHeaderType.V24">
            <summary>
            An ID3v2.4 header
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.PrivateFrame">
            <summary>
            This frame is used to contain information from a software producer that its program uses 
            and does not fit into the other frames. The frame consists of an 'Owner identifier' string 
            and the binary data. The 'Owner identifier' is a null-terminated string with a URL 
            containing an email address, or a link to a location where an email address can be found, 
            that belongs to the organisation responsible for the frame. Questions regarding the 
            frame should be sent to the indicated email address. The tag may contain more than 
            one "PRIV" frame but only with different contents. It is recommended to keep the 
            number of "PRIV" frames as low as possible.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PrivateFrame.#ctor">
            <summary>
            Creates a new instance of PrivateFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PrivateFrame.#ctor(System.String,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Creates a new instance of PrivateFrame.
            </summary>
            <param name="owner">the owner.</param>
            <param name="data">the data.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PrivateFrame.SetData(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the data from binary array.
            </summary>
            <param name="data">The data.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PrivateFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PrivateFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.PrivateFrame.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PrivateFrame.Owner">
            <summary>
            The owner.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PrivateFrame.Data">
            <summary>
            The data.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.PrivateFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame">
            <summary>
            This frame indicates if the actual audio stream is encrypted, and by whom. Since standardisation 
            of such encrypion scheme is beyond this document, all "AENC" frames begin with a terminated string 
            with a URL containing an email address, or a link to a location where an email address can be found, 
            that belongs to the organisation responsible for this specific encrypted audio file. 
            Questions regarding the encrypted audio should be sent to the email address specified. 
            If a $00 is found directly after the 'Frame size' and the audiofile indeed is encrypted, 
            the whole file may be considered useless.
            After the 'Owner identifier', a pointer to an unencrypted part of the audio can be specified. 
            The 'Preview start' and 'Preview length' is described in frames. If no part is unencrypted, 
            these fields should be left zeroed. After the 'preview length' field follows optionally a 
            datablock required for decryption of the audio. There may be more than one "AENC" frames in a tag, 
            but only one with the same 'Owner identifier'. 
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.#ctor">
            <summary>
            Creates a new instance of AudioEncryptionFrame.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.#ctor(System.String,System.UInt16,System.UInt16,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Creates a new instance of AudioEncryptionFrame.
            </summary>
            <param name="owner">the owner.</param>
            <param name="previewStart">the preview start.</param>
            <param name="previewLength">the preview length.</param>
            <param name="encryption">the encryption bytes</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.SetEncryption(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the encryption from bytes data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the values to a raw frame.
            </summary>
            <returns>the raw frame.</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import the raw frame.
            </summary>
            <param name="rawFrame">the raw frame.</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.ToString">
            <summary>
            Overwrite ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.Owner">
            <summary>
            The owner.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.PreviewStart">
            <summary>
            The preview start value.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.PreviewLength">
            <summary>
            The preview length value.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.Encryption">
            <summary>
            The encryption data.
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.AudioEncryptionFrame.Type">
            <summary>
            The frame type.
            </summary>
        </member>
        <member name="T:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame">
            <summary>
            This frame's purpose is to be able to identify the audio file in a database that may contain more information relevant to the content. 
            Since standardisation of such a database is beyond this document, all frames begin with a null-terminated string with a 
            URL containing an email address, or a link to a location where an email address can be found, 
            that belongs to the organisation responsible for this specific database implementation. 
            Questions regarding the database should be sent to the indicated email address. The URL should not be used for the actual database queries.
             The string "http://www.id3.org/dummy/ufid.html" should be used for tests. 
            Software that isn't told otherwise may safely remove such frames. The 'Owner identifier' must be non-empty (more than just a termination). 
            The 'Owner identifier' is then followed by the actual identifier, which may be up to 64 bytes. 
            There may be more than one "UFID" frame in a tag, but only one with the same 'Owner identifier'.
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.#ctor">
            <summary>
            Creates a new instance of UniqueFileIdentifierFrame
            </summary>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.#ctor(System.String,System.Collections.Generic.IList{System.Byte})">
            <summary>
            Creates a new instance of UniqueFileIdentifierFrame
            </summary>
            <param name="owner">the owner</param>
            <param name="identifier">the identifier</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.SetIdentifier(System.Collections.Generic.IList{System.Byte})">
            <summary>
            Sets the identifier from binary data.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.Convert(Id3Tag.HighLevel.TagVersion)">
            <summary>
            Convert the frame to raw frame.
            </summary>
            <returns>the raw frame</returns>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.Import(Id3Tag.LowLevel.RawFrame,System.Int32)">
            <summary>
            Import a raw frame.
            </summary>
            <param name="rawFrame">the raw frame</param>
            <param name="codePage">Default code page for Ansi encoding. Pass 0 to use default system encoding code page.</param>
        </member>
        <member name="M:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.Owner">
            <summary>
            The Owner Identifier
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.Identifier">
            <summary>
            The Identifier
            </summary>
        </member>
        <member name="P:Id3Tag.HighLevel.Id3Frame.UniqueFileIdentifierFrame.Type">
            <summary>
            Defines the frame type.
            </summary>
        </member>
    </members>
</doc>
